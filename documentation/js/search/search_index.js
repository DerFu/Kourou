var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.732,1,0.732]],["body/components/AppComponent.html",[0,1.083,1,1.01,2,0.647,3,0.502,4,1.443,5,1.443,6,1.443,7,0.381,8,1.073,9,2.171,10,2.61,11,1.443,12,2.61,13,1.941,14,1.941,15,2.171,16,2.171,17,2.171,18,2.171,19,0.502,20,1.248,21,1.941,22,1.215,23,1.614,24,2.159,25,2.904,26,1.073,27,1.443,28,1.468,29,2.159,30,2.171,31,1.073,32,0.097,33,1.171,34,0.755,35,1.073,36,1.443,37,1.614,38,2.61,39,1.443,40,0.829,41,0.829,42,1.5,43,0.647,44,1.443,45,1.073,46,0.502,47,0.829,48,1.073,49,1.443,50,1.443,51,1.443,52,1.443,53,1.614,54,2.171,55,2.171,56,0.829,57,2.171,58,2.171,59,2.171,60,2.904,61,1.443,62,1.443,63,0.051,64,0.051]],["title/modules/AppModule.html",[65,0.732,66,0.944]],["body/modules/AppModule.html",[1,1.394,2,0.924,3,0.717,7,0.544,32,0.095,42,2.056,43,0.924,46,0.975,47,1.184,56,1.184,63,0.065,64,0.065,65,0.975,66,1.694,67,0.924,68,2.369,69,2.369,70,2.084,71,1.532,72,1.532,73,1.532,74,2.084,75,1.532,76,1.184,77,2.06,78,2.803,79,1.532,80,1.184,81,2.803,82,2.803,83,1.532,84,2.06]],["title/injectables/WeatherService.html",[28,0.944,85,0.944]],["body/injectables/WeatherService.html",[2,0.81,3,0.628,7,0.477,14,1.343,19,0.628,20,1.47,21,2.209,22,0.628,23,1.902,24,2.402,26,1.343,28,1.147,29,2.209,31,1.343,32,0.097,33,0.81,34,0.628,35,1.343,37,1.902,40,1.038,41,1.038,42,1.96,43,0.81,45,1.343,46,0.628,47,1.038,48,1.343,63,0.06,64,0.06,83,1.343,85,1.332,86,1.343,87,2.402,88,1.806,89,3.23,90,1.806,91,2.558,92,1.806,93,2.97,94,2.558,95,1.806,96,1.343,97,1.038,98,1.806,99,1.806,100,2.558,101,1.343,102,1.038,103,1.343,104,1.343,105,1.806,106,1.806,107,1.806,108,1.806]],["title/interfaces/Weatherdata.html",[22,0.732,109,0.944]],["body/interfaces/Weatherdata.html",[2,0.578,3,0.449,7,0.34,19,0.449,20,1.145,22,0.693,32,0.099,33,0.578,34,1.089,46,1.136,53,2.202,63,0.047,64,0.047,102,0.741,109,1.513,110,0.959,111,2.962,112,2.962,113,2.962,114,2.962,115,4.102,116,2.435,117,2.435,118,3.131,119,2.74,120,1.289,121,2.435,122,2.435,123,1.289,124,2.435,125,2.435,126,1.289,127,1.289,128,1.289,129,1.289,130,1.289,131,1.289,132,1.289,133,1.289,134,1.289,135,1.289,136,1.289]],["title/coverage.html",[137,2.115]],["body/coverage.html",[0,0.864,1,0.864,7,0.656,8,1.846,22,0.864,28,1.114,32,0.092,34,0.864,63,0.074,64,0.074,85,1.114,86,1.846,97,1.822,109,1.114,110,1.846,137,1.846,138,2.483,139,2.483,140,2.483,141,3.801,142,2.483,143,2.483,144,1.846,145,1.822,146,3.17,147,1.846,148,2.483,149,1.846,150,2.483,151,2.483]],["title/dependencies.html",[67,1.132,152,1.772]],["body/dependencies.html",[32,0.097,43,1.101,63,0.073,64,0.073,67,1.101,79,2.34,80,1.808,96,1.825,153,2.454,154,4.031,155,2.454,156,2.454,157,2.454,158,2.454,159,2.454,160,2.454,161,2.454,162,2.454,163,2.454,164,2.454,165,2.454,166,2.454]],["title/index.html",[19,0.616,167,1.772,168,1.772]],["body/index.html",[0,1.06,3,0.659,7,0.5,13,1.409,32,0.062,33,0.85,63,0.062,64,0.062,76,1.089,149,1.409,169,1.894,170,2.646,171,3.3,172,3.048,173,3.048,174,1.894,175,1.894,176,1.894,177,2.646,178,3.691,179,3.691,180,1.894,181,1.894,182,1.894,183,1.894,184,1.894,185,1.894,186,1.894,187,1.894,188,1.894,189,3.048,190,1.894,191,3.471,192,1.894,193,1.894,194,1.894,195,1.894,196,1.894,197,1.894,198,1.409,199,2.646,200,3.471,201,2.646,202,2.646,203,1.894,204,3.3,205,1.894,206,1.894,207,1.894,208,3.048,209,1.894,210,1.894,211,1.894,212,1.894]],["title/modules.html",[65,0.989]],["body/modules.html",[32,0.084,63,0.084,64,0.084,65,1.071,66,1.381,80,1.769,213,3.078,214,3.078,215,3.078]],["title/overview.html",[216,2.115]],["body/overview.html",[0,0.874,1,1.378,32,0.086,46,0.874,56,1.444,63,0.075,64,0.075,65,1.111,66,1.711,67,1.127,68,1.868,69,1.868,70,1.868,71,1.868,72,1.868,73,1.868,74,2.375,75,1.868,76,1.444,85,1.127,109,1.127,216,1.868,217,3.695]],["title/miscellaneous/variables.html",[145,1.45,218,1.318]],["body/miscellaneous/variables.html",[19,0.773,32,0.096,34,1.026,40,1.695,41,1.695,63,0.069,64,0.069,87,2.193,97,2.168,101,2.193,102,1.695,103,2.193,104,2.193,144,1.653,145,1.277,147,1.653,198,2.193,218,1.653,219,2.222,220,2.222,221,3.526,222,2.222,223,2.949,224,2.949,225,2.949,226,2.949,227,2.222,228,2.222]]],"invertedIndex":[["",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/WeatherService.html":{},"interfaces/Weatherdata.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":141,"title":{},"body":{"coverage.html":{}}}],["0.8.26",{"_index":166,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":146,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":143,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":142,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":148,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":217,"title":{},"body":{"overview.html":{}}}],["2.5.4",{"_index":163,"title":{},"body":{"dependencies.html":{}}}],["3381303",{"_index":226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.1.0",{"_index":154,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":164,"title":{},"body":{"dependencies.html":{}}}],["6.2.4",{"_index":175,"title":{},"body":{"index.html":{}}}],["78097eb53944a84e2ecf552e4aaabbb",{"_index":228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_url",{"_index":106,"title":{},"body":{"injectables/WeatherService.html":{}}}],["actual_compon",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["angular",{"_index":172,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":153,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":155,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"injectables/WeatherService.html":{}}}],["angular/compil",{"_index":156,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":157,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":158,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":160,"title":{},"body":{"dependencies.html":{}}}],["anywhere.herokuapp.com",{"_index":224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["app.compon",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"coverage.html":{},"overview.html":{}}}],["appmodul",{"_index":66,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["artifact",{"_index":192,"title":{},"body":{"index.html":{}}}],["automat",{"_index":184,"title":{},"body":{"index.html":{}}}],["base",{"_index":102,"title":{},"body":{"injectables/WeatherService.html":{},"interfaces/Weatherdata.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["brows",{"_index":215,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":191,"title":{},"body":{"index.html":{}}}],["chang",{"_index":186,"title":{},"body":{"index.html":{}}}],["check",{"_index":211,"title":{},"body":{"index.html":{}}}],["cityid",{"_index":103,"title":{},"body":{"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/WeatherService.html":{}}}],["cli",{"_index":173,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":122,"title":{},"body":{"interfaces/Weatherdata.html":{}}}],["cluster_appmodul",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cod",{"_index":126,"title":{},"body":{"interfaces/Weatherdata.html":{}}}],["code",{"_index":187,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["const",{"_index":100,"title":{},"body":{"injectables/WeatherService.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/WeatherService.html":{}}}],["constructor(http",{"_index":88,"title":{},"body":{"injectables/WeatherService.html":{}}}],["constructor(priv",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"injectables/WeatherService.html":{}}}],["constructor(weatherservic",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["coord",{"_index":116,"title":{},"body":{"interfaces/Weatherdata.html":{}}}],["core",{"_index":161,"title":{},"body":{"dependencies.html":{}}}],["countri",{"_index":130,"title":{},"body":{"interfaces/Weatherdata.html":{}}}],["coverag",{"_index":137,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["data",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["declar",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/WeatherService.html":{}}}],["deg",{"_index":136,"title":{},"body":{"interfaces/Weatherdata.html":{}}}],["depend",{"_index":67,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":133,"title":{},"body":{"interfaces/Weatherdata.html":{}}}],["dev",{"_index":181,"title":{},"body":{"index.html":{}}}],["develop",{"_index":176,"title":{},"body":{"index.html":{}}}],["direct",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":190,"title":{},"body":{"index.html":{}}}],["directori",{"_index":195,"title":{},"body":{"index.html":{}}}],["dist",{"_index":194,"title":{},"body":{"index.html":{}}}],["document",{"_index":138,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{}}}],["dt",{"_index":123,"title":{},"body":{"interfaces/Weatherdata.html":{}}}],["dynam",{"_index":159,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":205,"title":{},"body":{"index.html":{}}}],["element",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["end",{"_index":204,"title":{},"body":{"index.html":{}}}],["environ",{"_index":97,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.weather_api_url",{"_index":94,"title":{},"body":{"injectables/WeatherService.html":{}}}],["environments/environ",{"_index":98,"title":{},"body":{"injectables/WeatherService.html":{}}}],["execut",{"_index":201,"title":{},"body":{"index.html":{}}}],["export",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/WeatherService.html":{},"interfaces/Weatherdata.html":{},"overview.html":{}}}],["fals",{"_index":227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/WeatherService.html":{},"interfaces/Weatherdata.html":{},"coverage.html":{},"index.html":{}}}],["flag",{"_index":197,"title":{},"body":{"index.html":{}}}],["further",{"_index":207,"title":{},"body":{"index.html":{}}}],["gener",{"_index":171,"title":{},"body":{"index.html":{}}}],["get",{"_index":167,"title":{"index.html":{}},"body":{}}],["getweatherdata",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/WeatherService.html":{}}}],["go",{"_index":210,"title":{},"body":{"index.html":{}}}],["help",{"_index":208,"title":{},"body":{"index.html":{}}}],["html",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["http",{"_index":91,"title":{},"body":{"injectables/WeatherService.html":{}}}],["http://localhost:4200",{"_index":183,"title":{},"body":{"index.html":{}}}],["http://samples.openweathermap.org/data/2.5/weath",{"_index":225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":89,"title":{},"body":{"injectables/WeatherService.html":{}}}],["httpclientmodul",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["https://cor",{"_index":223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["humid",{"_index":111,"title":{},"body":{"interfaces/Weatherdata.html":{}}}],["icon",{"_index":134,"title":{},"body":{"interfaces/Weatherdata.html":{}}}],["id",{"_index":125,"title":{},"body":{"interfaces/Weatherdata.html":{}}}],["identifi",{"_index":139,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":9,"title":{},"body":{"components/AppComponent.html":{}}}],["import",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/WeatherService.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/WeatherService.html":{},"interfaces/Weatherdata.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/WeatherService.html":{},"interfaces/Weatherdata.html":{}}}],["inject",{"_index":85,"title":{"injectables/WeatherService.html":{}},"body":{"injectables/WeatherService.html":{},"coverage.html":{},"overview.html":{}}}],["interfac",{"_index":109,"title":{"interfaces/Weatherdata.html":{}},"body":{"interfaces/Weatherdata.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces/weatherdata",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"injectables/WeatherService.html":{}}}],["js",{"_index":162,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":203,"title":{},"body":{"index.html":{}}}],["key",{"_index":104,"title":{},"body":{"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["kourou",{"_index":169,"title":{},"body":{"index.html":{}}}],["lat",{"_index":128,"title":{},"body":{"interfaces/Weatherdata.html":{}}}],["legend",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["lon",{"_index":127,"title":{},"body":{"interfaces/Weatherdata.html":{}}}],["lädt",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["main",{"_index":119,"title":{},"body":{"interfaces/Weatherdata.html":{}}}],["match",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/WeatherService.html":{},"interfaces/Weatherdata.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["messag",{"_index":129,"title":{},"body":{"interfaces/Weatherdata.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{}}}],["method",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"injectables/WeatherService.html":{}}}],["miscellan",{"_index":218,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modul",{"_index":65,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":209,"title":{},"body":{"index.html":{}}}],["name",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/WeatherService.html":{},"interfaces/Weatherdata.html":{},"index.html":{}}}],["navig",{"_index":182,"title":{},"body":{"index.html":{}}}],["new",{"_index":149,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["ng",{"_index":179,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["number",{"_index":115,"title":{},"body":{"interfaces/Weatherdata.html":{}}}],["object",{"_index":221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observ",{"_index":93,"title":{},"body":{"injectables/WeatherService.html":{}}}],["oninit",{"_index":10,"title":{},"body":{"components/AppComponent.html":{}}}],["option",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"injectables/WeatherService.html":{}}}],["out",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":216,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":152,"title":{"dependencies.html":{}},"body":{}}],["paramet",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/WeatherService.html":{}}}],["prefix",{"_index":101,"title":{},"body":{"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["prefix}${base}?id=${cityid}&appid=${key",{"_index":107,"title":{},"body":{"injectables/WeatherService.html":{}}}],["pressur",{"_index":112,"title":{},"body":{"interfaces/Weatherdata.html":{}}}],["prod",{"_index":196,"title":{},"body":{"index.html":{}}}],["product",{"_index":198,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":170,"title":{},"body":{"index.html":{}}}],["properti",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/WeatherService.html":{},"interfaces/Weatherdata.html":{}}}],["protractor",{"_index":206,"title":{},"body":{"index.html":{}}}],["provid",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providedin",{"_index":99,"title":{},"body":{"injectables/WeatherService.html":{}}}],["public",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"injectables/WeatherService.html":{}}}],["readm",{"_index":212,"title":{},"body":{"index.html":{}}}],["reload",{"_index":185,"title":{},"body":{"index.html":{}}}],["reset",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["result",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/WeatherService.html":{},"interfaces/Weatherdata.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/WeatherService.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/WeatherService.html":{}}}],["run",{"_index":178,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":96,"title":{},"body":{"injectables/WeatherService.html":{},"dependencies.html":{}}}],["scaffold",{"_index":188,"title":{},"body":{"index.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["serv",{"_index":180,"title":{},"body":{"index.html":{}}}],["server",{"_index":177,"title":{},"body":{"index.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/WeatherService.html":{},"interfaces/Weatherdata.html":{},"index.html":{}}}],["speed",{"_index":135,"title":{},"body":{"interfaces/Weatherdata.html":{}}}],["src/.../environment.prod.t",{"_index":219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/weather.service.t",{"_index":86,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{}}}],["src/app/weather.service.ts:10",{"_index":90,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather.service.ts:12",{"_index":95,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather.service.ts:14",{"_index":92,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/environments/environment.prod.t",{"_index":144,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":147,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/interfaces/weatherdata.t",{"_index":110,"title":{},"body":{"interfaces/Weatherdata.html":{},"coverage.html":{}}}],["start",{"_index":168,"title":{"index.html":{}},"body":{}}],["statement",{"_index":140,"title":{},"body":{"coverage.html":{}}}],["store",{"_index":193,"title":{},"body":{"index.html":{}}}],["string",{"_index":118,"title":{},"body":{"interfaces/Weatherdata.html":{}}}],["styleurl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["sunris",{"_index":131,"title":{},"body":{"interfaces/Weatherdata.html":{}}}],["sunset",{"_index":132,"title":{},"body":{"interfaces/Weatherdata.html":{}}}],["support",{"_index":213,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":214,"title":{},"body":{"modules.html":{}}}],["sy",{"_index":124,"title":{},"body":{"interfaces/Weatherdata.html":{}}}],["tabl",{"_index":151,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":150,"title":{},"body":{"coverage.html":{}}}],["temp",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Weatherdata.html":{}}}],["temp_max",{"_index":113,"title":{},"body":{"interfaces/Weatherdata.html":{}}}],["temp_min",{"_index":114,"title":{},"body":{"interfaces/Weatherdata.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["test",{"_index":200,"title":{},"body":{"index.html":{}}}],["this.getweatherdata",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["this.http.get(_url",{"_index":108,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.weather_api_url",{"_index":105,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.weatherdata",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["this.weatherservice.getweatherdata().subscribe(data",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{}}}],["true",{"_index":222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/WeatherService.html":{},"interfaces/Weatherdata.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":199,"title":{},"body":{"index.html":{}}}],["us",{"_index":189,"title":{},"body":{"index.html":{}}}],["valu",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["variabl",{"_index":145,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":174,"title":{},"body":{"index.html":{}}}],["via",{"_index":202,"title":{},"body":{"index.html":{}}}],["visibl",{"_index":120,"title":{},"body":{"interfaces/Weatherdata.html":{}}}],["void",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["weather",{"_index":117,"title":{},"body":{"interfaces/Weatherdata.html":{}}}],["weather.servic",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["weather_api_url",{"_index":87,"title":{},"body":{"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["weatherdata",{"_index":22,"title":{"interfaces/Weatherdata.html":{}},"body":{"components/AppComponent.html":{},"injectables/WeatherService.html":{},"interfaces/Weatherdata.html":{},"coverage.html":{}}}],["weatherdata.main.temp",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["weatherservic",{"_index":28,"title":{"injectables/WeatherService.html":{}},"body":{"components/AppComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["wind",{"_index":121,"title":{},"body":{"interfaces/Weatherdata.html":{}}}],["zone.j",{"_index":165,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                weatherData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWeatherData\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getWeatherData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetWeatherData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherData:     Weatherdata[]\n\n                    \n                \n                    \n                        \n                            Type :     Weatherdata[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { WeatherService } from './weather.service';\nimport { Weatherdata } from '../interfaces/WeatherData';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  public weatherData: Weatherdata[] = [];\n\n  constructor(private weatherService: WeatherService) {}\n\n  getWeatherData(): void {\n    this.weatherService.getWeatherData().subscribe(data => {\n      this.weatherData = data;\n    });\n  }\n\n  ngOnInit() {\n    this.getWeatherData();\n  }\n}\n\n    \n\n    \n        \n  Temp:\n    \n      {{ weatherData.main.temp }}\n    \n    lädt°\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Temp:          {{ weatherData.main.temp }}        lädt°  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, HttpClientModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                WEATHER_API_URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getWeatherData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getWeatherData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getWeatherData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather.service.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            WEATHER_API_URL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        WEATHER_API_URL:     \n\n                    \n                \n                    \n                        \n                            Default value : environment.WEATHER_API_URL\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Weatherdata } from '../interfaces/WeatherData';\nimport { environment } from '../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherService {\n  constructor(private http: HttpClient) {}\n  WEATHER_API_URL = environment.WEATHER_API_URL;\n\n  public getWeatherData(): Observable {\n    const { prefix, base, cityId, key } = this.WEATHER_API_URL;\n    const _url = `${prefix}${base}?id=${cityId}&appid=${key}`;\n    return this.http.get(_url);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Weatherdata.html":{"url":"interfaces/Weatherdata.html","title":"interface - Weatherdata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Weatherdata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/WeatherData.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        humidity\n                                \n                                \n                                        pressure\n                                \n                                \n                                        temp\n                                \n                                \n                                        temp_max\n                                \n                                \n                                        temp_min\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        humidity\n                                    \n                                \n                                \n                                    \n                                        humidity:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pressure\n                                    \n                                \n                                \n                                    \n                                        pressure:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temp\n                                    \n                                \n                                \n                                    \n                                        temp:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temp_max\n                                    \n                                \n                                \n                                    \n                                        temp_max:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temp_min\n                                    \n                                \n                                \n                                    \n                                        temp_min:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Weatherdata {\n  temp: number;\n  pressure: number;\n  humidity: number;\n  temp_min: number;\n  temp_max: number;\n  //   coord: Coord;\n  //   weather: Weather[];\n  //   base: string;\n  //   main: Main;\n  //   visibility: number;\n  //   wind: Wind;\n  //   clouds: Clouds;\n  //   dt: number;\n  //   sys: Sys;\n  //   id: number;\n  //   name: string;\n  //   cod: number;\n}\n\n// export interface Clouds {\n//   all: number;\n// }\n\n// export interface Coord {\n//   lon: number;\n//   lat: number;\n// }\n\n// export interface Main {\n//   temp: number;\n//   pressure: number;\n//   humidity: number;\n//   temp_min: number;\n//   temp_max: number;\n// }\n\n// export interface Sys {\n//   type: number;\n//   id: number;\n//   message: number;\n//   country: string;\n//   sunrise: number;\n//   sunset: number;\n// }\n\n// export interface Weather {\n//   id: number;\n//   main: string;\n//   description: string;\n//   icon: string;\n// }\n\n// export interface Wind {\n//   speed: number;\n//   deg: number;\n// }\n//\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/weather.service.ts\n            \n            \n                injectable\n            \n            \n                WeatherService\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interfaces/WeatherData.ts\n            \n            \n                interface\n            \n            \n                Weatherdata\n            \n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.0\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            core-js : ^2.5.4\n        \n            rxjs : ~6.2.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nKourou\nThis project was generated with Angular CLI version 6.2.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  WEATHER_API_URL: {\n    prefix: 'https://cors-anywhere.herokuapp.com/',\n    base: 'http://samples.openweathermap.org/data/2.5/weather',\n    cityId: '3381303',\n    key: ''\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  WEATHER_API_URL: {\n    prefix: 'https://cors-anywhere.herokuapp.com/',\n    base: 'http://samples.openweathermap.org/data/2.5/weather',\n    cityId: '3381303',\n    key: '78097eb53944a84e2ecf552e4aaabbbe'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
